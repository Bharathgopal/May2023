Date String to Structure conversion
In a application, the date is stored as a string and for computations, converting the string to number is required.
Write a function to convert the string formated date to a structure as per the below code
Return appropriate error values if the conversion is not successful
---------------------------------------------------------------------------------------------------------------------------
Inptu string format
    DD/MM/YYYY
---------------------------------------------------------------------------------------------------------------------------
Output Structure format
typedef struct my_date_t
{
    uint8_t date;       /*<<< date */
    uint8_t month;      /*<<< month */
    uint16_t year;      /*<<< year   */
}my_date_t;
---------------------------------------------------------------------------------------------------------------------------
Conversion status
typedef enum status_t
{
    SUCCESS,                    /**< Function has successfully converted the string to structure */
    NULL_PTR,                   /**< Function is given NULL pointers to work with */
    INCORRECT                   /**< Incorrect values for date or month or year */
}status_t;
---------------------------------------------------------------------------------------------------------------------------
Function prototype
/**
 * @brief Function to convert string of the format DD/MM/YYYY to my_date_t structure
 * 
 * @param input_string String which needs to be converted
 * @param result_time Resultant structure to hold the converted string
 * @return status_t SUCCESS if conversion is done, status_t code otherwise.
 */
status_t string_to_date_converter(char* input_string, my_date_t* result_date);
---------------------------------------------------------------------------------------------------------------------------
SAIKRISHNA_LTTS_CHALLENGE_2
  

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

typedef struct my_date_t {
    uint8_t date;  
    uint8_t month;  
    uint16_t year;  
} my_date_t;

typedef enum status_t {
    SUCCESS,    
    NULL_PTR,   
    INCORRECT  
} status_t;

status_t string_to_date_converter(char* input_string, my_date_t* result_date) {
    if (input_string == NULL || result_date == NULL) {
        return NULL_PTR;
    }

    int day, month, year;
    if (sscanf(input_string, "%d/%d/%d", &day, &month, &year) != 3) {
        return INCORRECT;
    }

  
    if (day < 1 || day > 31 || month < 1 || month > 12 || year < 0) {
        return INCORRECT;
    }

    result_date->date = (uint8_t)day;
    result_date->month = (uint8_t)month;
    result_date->year = (uint16_t)year;

    return SUCCESS;
}

int main() {
    char input_string[11];  
    my_date_t result_date;
    status_t conversion_status;

    printf("Enter the date (in DD/MM/YYYY format): ");
    scanf("%10s", input_string);

    conversion_status = string_to_date_converter(input_string, &result_date);

    switch (conversion_status) {
        case SUCCESS:
            printf("Conversion successful!\n");
            printf("Date: %02d\n", result_date.date);
            printf("Month: %02d\n", result_date.month);
            printf("Year: %04d\n", result_date.year);
            break;
        case NULL_PTR:
            printf("Error: NULL pointers are not allowed!\n");
            break;
        case INCORRECT:
            printf("Error: Incorrect values for date or month or year!\n");
            break;
    }

    return 0;
}

---------------------------------------------------------------------------------------------------------------------------

output:
Enter the date (in DD/MM/YYYY format): 22/10/2000

Conversion successful!

Date: 22

Month: 10

Year: 2000
