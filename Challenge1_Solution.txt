#include <stdint.h>
#include <stdio.h>

#define MAX_PACKET_DATA_LENGTH (50)

typedef struct data_packet_t{
    uint8_t id;
    uint8_t data_length;
    uint8_t data[MAX_PACKET_DATA_LENGTH];
    uint16_t crc;
}data_packet_t;


uint16_t calculate_crc(const data_packet_t* packet) {
    
    uint16_t crc = 0xFFFF;
    uint8_t i, j;
    
    for (i = 0; i < (2 + packet->data_length); ++i) {
        crc ^= (i == 0 ? packet->id : i == 1 ? packet->data_length : packet->data[i - 2]);
        for (j = 0; j < 8; ++j) {
            if (crc & 0x0001)
                crc = (crc >> 1) ^ 0x8408;  // XOR with the CRC-16-CCITT 
            else
                crc = crc >> 1;
        }
    }
    
    return crc;
}

// Function to check if the data packet is corrupted or not
int is_packet_corrupted(const data_packet_t* packet) {
    return (calculate_crc(packet) != packet->crc);
}

int main(){
    uint16_t crc;
    const data_packet_t* packet;
    calculate_crc(packet); 
    int ans = is_packet_corrupted(packet); 
    printf("The packet is corrupted or not : %d ", ans);
}