-> C CODE



#include <stdint.h>

#define MAX_PACKET_DATA_LENGTH (50)

typedef struct data_packet_t { uint8_t id; uint8_t data_length; uint8_t data[MAX_PACKET_DATA_LENGTH]; uint16_t crc; } data_packet_t;

#define CRC_POLYNOMIAL 0x1021

uint16_t calculate_crc(const uint8_t* data, uint8_t length) { uint16_t crc = 0xFFFF;

for (uint8_t i = 0; i < length; i++) {
    crc ^= (uint16_t)(data[i] << 8); // XOR with next data byte

    for (uint8_t bit = 0; bit < 8; bit++) {
        if (crc & 0x8000) {
            crc = (crc << 1) ^ CRC_POLYNOMIAL;
        } else {
            crc <<= 1;
        }
    }
}

return crc;
}

int is_packet_corrupted(const data_packet_t* packet) { uint16_t calculated_crc = calculate_crc(packet->data, packet->data_length); return (calculated_crc != packet->crc); }
