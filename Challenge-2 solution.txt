#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct my_date_t
{
    uint8_t date;       //date
    uint8_t month;      //month
    uint16_t year;      //year
} my_date_t;

typedef enum status_t
{
    SUCCESS,    
    NULL_PTR,   
    INCORRECT   
} status_t;

status_t string_to_date_converter(char* input_string, my_date_t* result_date)
{
    if (input_string == NULL || result_date == NULL)
        return NULL_PTR;

    char* endptr;
    result_date->date = (uint8_t)strtol(input_string, &endptr, 10);
    if (*endptr != '/')
        return INCORRECT;

    result_date->month = (uint8_t)strtol(endptr + 1, &endptr, 10);
    if (*endptr != '/')
        return INCORRECT;

    result_date->year = (uint16_t)strtol(endptr + 1, &endptr, 10);
    if (*endptr != '\0')
        return INCORRECT;

    if (result_date->date < 1 || result_date->date > 31 ||
        result_date->month < 1 || result_date->month > 12)
        return INCORRECT;

    return SUCCESS;
}

int main()
{
    char input_string[11];
    my_date_t result_date;

    printf("Enter the date in DD/MM/YYYY format: ");
    fgets(input_string, sizeof(input_string), stdin);

    input_string[strcspn(input_string, "\n")] = '\0';

    status_t conversion_status = string_to_date_converter(input_string, &result_date);

    if (conversion_status == SUCCESS)
    {
        printf("Conversion successful:\n");
        printf("Date: %d\n", result_date.date);
        printf("Month: %d\n", result_date.month);
        printf("Year: %d\n", result_date.year);
    }
    else if (conversion_status == NULL_PTR)
    {
        printf("Error: NULL pointers provided.\n");
    }
    else if (conversion_status == INCORRECT)
    {
        printf("Error: Incorrect date format or values.\n");
    }

    return 0;
}
